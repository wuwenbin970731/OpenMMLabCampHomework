{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0: GeForce RTX 2080 Ti\nCUDA_HOME: /data/cuda/cuda-10.0/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.13\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.10.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.0\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.28.1+c14dd6c", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=None),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=200,\n            max_per_img=100,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=20,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = 'data/balloon/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/annotations/train.json',\n        img_prefix='data/balloon/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=['balloon']),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/annotations/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=['balloon']),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/annotations/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=['balloon']))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[26, 39])\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/mask_rcnn_r50_fpn_mstrain-poly_3x_coco_20210524_201154-21b550bb.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nwork_dir = './work_dirs/mask_rcnn_r50_fpn_50e_ballon'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "mask_rcnn_r50_fpn_50e_ballon.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 9e-05, "memory": 6654, "data_time": 0.34268, "loss_rpn_cls": 0.05653, "loss_rpn_bbox": 0.01241, "loss_cls": 0.68811, "acc": 54.38965, "loss_bbox": 0.29078, "loss_mask": 1.44014, "loss": 2.48797, "time": 0.94233}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 0.00015, "bbox_mAP": 0.0448, "bbox_mAP_50": 0.0773, "bbox_mAP_75": 0.0428, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0167, "bbox_mAP_l": 0.0618, "bbox_mAP_copypaste": "0.0448 0.0773 0.0428 0.0000 0.0167 0.0618", "segm_mAP": 0.0599, "segm_mAP_50": 0.0805, "segm_mAP_75": 0.0635, "segm_mAP_s": 0.0, "segm_mAP_m": 0.0127, "segm_mAP_l": 0.1056, "segm_mAP_copypaste": "0.0599 0.0805 0.0635 0.0000 0.0127 0.1056"}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.00025, "memory": 7261, "data_time": 0.35241, "loss_rpn_cls": 0.03147, "loss_rpn_bbox": 0.01462, "loss_cls": 0.32732, "acc": 89.49219, "loss_bbox": 0.3869, "loss_mask": 0.43551, "loss": 1.19583, "time": 0.87772}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.00031, "bbox_mAP": 0.2228, "bbox_mAP_50": 0.3015, "bbox_mAP_75": 0.2872, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.1011, "bbox_mAP_l": 0.2848, "bbox_mAP_copypaste": "0.2228 0.3015 0.2872 0.0000 0.1011 0.2848", "segm_mAP": 0.2479, "segm_mAP_50": 0.2961, "segm_mAP_75": 0.2908, "segm_mAP_s": 0.0, "segm_mAP_m": 0.076, "segm_mAP_l": 0.385, "segm_mAP_copypaste": "0.2479 0.2961 0.2908 0.0000 0.0760 0.3850"}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.00041, "memory": 7261, "data_time": 0.34214, "loss_rpn_cls": 0.02226, "loss_rpn_bbox": 0.01405, "loss_cls": 0.25561, "acc": 88.82324, "loss_bbox": 0.40245, "loss_mask": 0.17019, "loss": 0.86457, "time": 0.84993}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00047, "bbox_mAP": 0.5596, "bbox_mAP_50": 0.7187, "bbox_mAP_75": 0.6941, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.3909, "bbox_mAP_l": 0.6568, "bbox_mAP_copypaste": "0.5596 0.7187 0.6941 0.0000 0.3909 0.6568", "segm_mAP": 0.6461, "segm_mAP_50": 0.7028, "segm_mAP_75": 0.6954, "segm_mAP_s": 0.0, "segm_mAP_m": 0.3543, "segm_mAP_l": 0.7678, "segm_mAP_copypaste": "0.6461 0.7028 0.6954 0.0000 0.3543 0.7678"}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.00057, "memory": 7261, "data_time": 0.35818, "loss_rpn_cls": 0.01984, "loss_rpn_bbox": 0.01062, "loss_cls": 0.17798, "acc": 90.18066, "loss_bbox": 0.35513, "loss_mask": 0.10668, "loss": 0.67025, "time": 0.91117}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00063, "bbox_mAP": 0.6212, "bbox_mAP_50": 0.8045, "bbox_mAP_75": 0.7397, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5307, "bbox_mAP_l": 0.6889, "bbox_mAP_copypaste": "0.6212 0.8045 0.7397 0.0000 0.5307 0.6889", "segm_mAP": 0.7297, "segm_mAP_50": 0.7915, "segm_mAP_75": 0.7672, "segm_mAP_s": 0.0, "segm_mAP_m": 0.5251, "segm_mAP_l": 0.8303, "segm_mAP_copypaste": "0.7297 0.7915 0.7672 0.0000 0.5251 0.8303"}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00073, "memory": 7261, "data_time": 0.32077, "loss_rpn_cls": 0.01189, "loss_rpn_bbox": 0.00963, "loss_cls": 0.13106, "acc": 95.73242, "loss_bbox": 0.33029, "loss_mask": 0.0926, "loss": 0.57547, "time": 0.84139}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00079, "bbox_mAP": 0.6493, "bbox_mAP_50": 0.8253, "bbox_mAP_75": 0.7866, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5485, "bbox_mAP_l": 0.7217, "bbox_mAP_copypaste": "0.6493 0.8253 0.7866 0.0000 0.5485 0.7217", "segm_mAP": 0.75, "segm_mAP_50": 0.8081, "segm_mAP_75": 0.8081, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6051, "segm_mAP_l": 0.8365, "segm_mAP_copypaste": "0.7500 0.8081 0.8081 0.0000 0.6051 0.8365"}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.00089, "memory": 7261, "data_time": 0.33212, "loss_rpn_cls": 0.01135, "loss_rpn_bbox": 0.00897, "loss_cls": 0.08713, "acc": 97.13867, "loss_bbox": 0.21224, "loss_mask": 0.08673, "loss": 0.40641, "time": 0.86861}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00095, "bbox_mAP": 0.7139, "bbox_mAP_50": 0.8426, "bbox_mAP_75": 0.7975, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5772, "bbox_mAP_l": 0.7949, "bbox_mAP_copypaste": "0.7139 0.8426 0.7975 0.0000 0.5772 0.7949", "segm_mAP": 0.7699, "segm_mAP_50": 0.8252, "segm_mAP_75": 0.8252, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6388, "segm_mAP_l": 0.8484, "segm_mAP_copypaste": "0.7699 0.8252 0.8252 0.0000 0.6388 0.8484"}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 0.00105, "memory": 7261, "data_time": 0.34838, "loss_rpn_cls": 0.00736, "loss_rpn_bbox": 0.01046, "loss_cls": 0.07538, "acc": 97.39746, "loss_bbox": 0.12482, "loss_mask": 0.08503, "loss": 0.30306, "time": 0.897}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.00111, "bbox_mAP": 0.7231, "bbox_mAP_50": 0.8461, "bbox_mAP_75": 0.8256, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6032, "bbox_mAP_l": 0.8046, "bbox_mAP_copypaste": "0.7231 0.8461 0.8256 0.0000 0.6032 0.8046", "segm_mAP": 0.7739, "segm_mAP_50": 0.8287, "segm_mAP_75": 0.8287, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6416, "segm_mAP_l": 0.8568, "segm_mAP_copypaste": "0.7739 0.8287 0.8287 0.0000 0.6416 0.8568"}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 0.00121, "memory": 7261, "data_time": 0.34226, "loss_rpn_cls": 0.00794, "loss_rpn_bbox": 0.00847, "loss_cls": 0.06058, "acc": 97.82715, "loss_bbox": 0.0849, "loss_mask": 0.07737, "loss": 0.23926, "time": 0.87033}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00127, "bbox_mAP": 0.7434, "bbox_mAP_50": 0.8825, "bbox_mAP_75": 0.8422, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6542, "bbox_mAP_l": 0.8164, "bbox_mAP_copypaste": "0.7434 0.8825 0.8422 0.0000 0.6542 0.8164", "segm_mAP": 0.7992, "segm_mAP_50": 0.8621, "segm_mAP_75": 0.8621, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6971, "segm_mAP_l": 0.873, "segm_mAP_copypaste": "0.7992 0.8621 0.8621 0.0000 0.6971 0.8730"}
{"mode": "train", "epoch": 9, "iter": 10, "lr": 0.00137, "memory": 7261, "data_time": 0.33878, "loss_rpn_cls": 0.00622, "loss_rpn_bbox": 0.00987, "loss_cls": 0.06415, "acc": 97.6709, "loss_bbox": 0.08729, "loss_mask": 0.0852, "loss": 0.25273, "time": 0.85156}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 0.00143, "bbox_mAP": 0.7636, "bbox_mAP_50": 0.8985, "bbox_mAP_75": 0.8753, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6994, "bbox_mAP_l": 0.8259, "bbox_mAP_copypaste": "0.7636 0.8985 0.8753 0.0000 0.6994 0.8259", "segm_mAP": 0.8123, "segm_mAP_50": 0.8765, "segm_mAP_75": 0.8765, "segm_mAP_s": 0.0, "segm_mAP_m": 0.7402, "segm_mAP_l": 0.8763, "segm_mAP_copypaste": "0.8123 0.8765 0.8765 0.0000 0.7402 0.8763"}
{"mode": "train", "epoch": 10, "iter": 10, "lr": 0.00153, "memory": 7261, "data_time": 0.36019, "loss_rpn_cls": 0.00433, "loss_rpn_bbox": 0.00938, "loss_cls": 0.05891, "acc": 97.80273, "loss_bbox": 0.08516, "loss_mask": 0.08632, "loss": 0.24409, "time": 0.90835}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 0.00159, "bbox_mAP": 0.7773, "bbox_mAP_50": 0.9023, "bbox_mAP_75": 0.8743, "bbox_mAP_s": 0.1262, "bbox_mAP_m": 0.7272, "bbox_mAP_l": 0.8325, "bbox_mAP_copypaste": "0.7773 0.9023 0.8743 0.1262 0.7272 0.8325", "segm_mAP": 0.8173, "segm_mAP_50": 0.8823, "segm_mAP_75": 0.8823, "segm_mAP_s": 0.0577, "segm_mAP_m": 0.7135, "segm_mAP_l": 0.875, "segm_mAP_copypaste": "0.8173 0.8823 0.8823 0.0577 0.7135 0.8750"}
{"mode": "train", "epoch": 11, "iter": 10, "lr": 0.00169, "memory": 7261, "data_time": 0.32185, "loss_rpn_cls": 0.00329, "loss_rpn_bbox": 0.00781, "loss_cls": 0.05679, "acc": 97.87109, "loss_bbox": 0.08553, "loss_mask": 0.082, "loss": 0.23543, "time": 0.85306}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 0.00175, "bbox_mAP": 0.7816, "bbox_mAP_50": 0.8862, "bbox_mAP_75": 0.8634, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7304, "bbox_mAP_l": 0.8368, "bbox_mAP_copypaste": "0.7816 0.8862 0.8634 0.0000 0.7304 0.8368", "segm_mAP": 0.8029, "segm_mAP_50": 0.8621, "segm_mAP_75": 0.8621, "segm_mAP_s": 0.0, "segm_mAP_m": 0.7183, "segm_mAP_l": 0.8603, "segm_mAP_copypaste": "0.8029 0.8621 0.8621 0.0000 0.7183 0.8603"}
{"mode": "train", "epoch": 12, "iter": 10, "lr": 0.00185, "memory": 7261, "data_time": 0.3071, "loss_rpn_cls": 0.00311, "loss_rpn_bbox": 0.00743, "loss_cls": 0.05129, "acc": 98.14453, "loss_bbox": 0.06771, "loss_mask": 0.07637, "loss": 0.20591, "time": 0.8471}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 0.00191, "bbox_mAP": 0.7755, "bbox_mAP_50": 0.9046, "bbox_mAP_75": 0.8759, "bbox_mAP_s": 0.1262, "bbox_mAP_m": 0.7095, "bbox_mAP_l": 0.8329, "bbox_mAP_copypaste": "0.7755 0.9046 0.8759 0.1262 0.7095 0.8329", "segm_mAP": 0.8183, "segm_mAP_50": 0.9046, "segm_mAP_75": 0.8851, "segm_mAP_s": 0.0673, "segm_mAP_m": 0.7298, "segm_mAP_l": 0.8742, "segm_mAP_copypaste": "0.8183 0.9046 0.8851 0.0673 0.7298 0.8742"}
{"mode": "train", "epoch": 13, "iter": 10, "lr": 0.00201, "memory": 7261, "data_time": 0.32854, "loss_rpn_cls": 0.00342, "loss_rpn_bbox": 0.00697, "loss_cls": 0.04147, "acc": 98.50098, "loss_bbox": 0.06501, "loss_mask": 0.07576, "loss": 0.19263, "time": 0.86455}
{"mode": "val", "epoch": 13, "iter": 13, "lr": 0.00207, "bbox_mAP": 0.7902, "bbox_mAP_50": 0.8983, "bbox_mAP_75": 0.876, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7185, "bbox_mAP_l": 0.8562, "bbox_mAP_copypaste": "0.7902 0.8983 0.8760 0.0000 0.7185 0.8562", "segm_mAP": 0.8163, "segm_mAP_50": 0.8983, "segm_mAP_75": 0.8745, "segm_mAP_s": 0.0, "segm_mAP_m": 0.7293, "segm_mAP_l": 0.8801, "segm_mAP_copypaste": "0.8163 0.8983 0.8745 0.0000 0.7293 0.8801"}
{"mode": "train", "epoch": 14, "iter": 10, "lr": 0.00217, "memory": 7261, "data_time": 0.3411, "loss_rpn_cls": 0.0014, "loss_rpn_bbox": 0.00562, "loss_cls": 0.03859, "acc": 98.61328, "loss_bbox": 0.05477, "loss_mask": 0.06277, "loss": 0.16315, "time": 0.85957}
{"mode": "val", "epoch": 14, "iter": 13, "lr": 0.00223, "bbox_mAP": 0.7775, "bbox_mAP_50": 0.899, "bbox_mAP_75": 0.8773, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7181, "bbox_mAP_l": 0.8411, "bbox_mAP_copypaste": "0.7775 0.8990 0.8773 0.0000 0.7181 0.8411", "segm_mAP": 0.8102, "segm_mAP_50": 0.899, "segm_mAP_75": 0.8729, "segm_mAP_s": 0.0, "segm_mAP_m": 0.7051, "segm_mAP_l": 0.8773, "segm_mAP_copypaste": "0.8102 0.8990 0.8729 0.0000 0.7051 0.8773"}
{"mode": "train", "epoch": 15, "iter": 10, "lr": 0.00233, "memory": 7261, "data_time": 0.33169, "loss_rpn_cls": 0.00156, "loss_rpn_bbox": 0.00727, "loss_cls": 0.04281, "acc": 98.50586, "loss_bbox": 0.06399, "loss_mask": 0.07402, "loss": 0.18966, "time": 0.87147}
{"mode": "val", "epoch": 15, "iter": 13, "lr": 0.00239, "bbox_mAP": 0.779, "bbox_mAP_50": 0.9027, "bbox_mAP_75": 0.8866, "bbox_mAP_s": 0.303, "bbox_mAP_m": 0.7335, "bbox_mAP_l": 0.8318, "bbox_mAP_copypaste": "0.7790 0.9027 0.8866 0.3030 0.7335 0.8318", "segm_mAP": 0.8248, "segm_mAP_50": 0.9027, "segm_mAP_75": 0.8837, "segm_mAP_s": 0.1304, "segm_mAP_m": 0.7199, "segm_mAP_l": 0.8864, "segm_mAP_copypaste": "0.8248 0.9027 0.8837 0.1304 0.7199 0.8864"}
{"mode": "train", "epoch": 16, "iter": 10, "lr": 0.00249, "memory": 7261, "data_time": 0.30673, "loss_rpn_cls": 0.00188, "loss_rpn_bbox": 0.00732, "loss_cls": 0.03373, "acc": 98.75977, "loss_bbox": 0.05023, "loss_mask": 0.06988, "loss": 0.16304, "time": 0.85543}
{"mode": "val", "epoch": 16, "iter": 13, "lr": 0.00255, "bbox_mAP": 0.7923, "bbox_mAP_50": 0.9036, "bbox_mAP_75": 0.8774, "bbox_mAP_s": 0.2525, "bbox_mAP_m": 0.7198, "bbox_mAP_l": 0.8582, "bbox_mAP_copypaste": "0.7923 0.9036 0.8774 0.2525 0.7198 0.8582", "segm_mAP": 0.8163, "segm_mAP_50": 0.9036, "segm_mAP_75": 0.8821, "segm_mAP_s": 0.0985, "segm_mAP_m": 0.6844, "segm_mAP_l": 0.8843, "segm_mAP_copypaste": "0.8163 0.9036 0.8821 0.0985 0.6844 0.8843"}
{"mode": "train", "epoch": 17, "iter": 10, "lr": 0.00265, "memory": 7261, "data_time": 0.37977, "loss_rpn_cls": 0.00155, "loss_rpn_bbox": 0.00608, "loss_cls": 0.03371, "acc": 98.66699, "loss_bbox": 0.04958, "loss_mask": 0.06894, "loss": 0.15986, "time": 0.92282}
{"mode": "val", "epoch": 17, "iter": 13, "lr": 0.00271, "bbox_mAP": 0.7577, "bbox_mAP_50": 0.9044, "bbox_mAP_75": 0.8768, "bbox_mAP_s": 0.2525, "bbox_mAP_m": 0.6862, "bbox_mAP_l": 0.8158, "bbox_mAP_copypaste": "0.7577 0.9044 0.8768 0.2525 0.6862 0.8158", "segm_mAP": 0.8122, "segm_mAP_50": 0.9044, "segm_mAP_75": 0.885, "segm_mAP_s": 0.1304, "segm_mAP_m": 0.7045, "segm_mAP_l": 0.8712, "segm_mAP_copypaste": "0.8122 0.9044 0.8850 0.1304 0.7045 0.8712"}
{"mode": "train", "epoch": 18, "iter": 10, "lr": 0.00281, "memory": 7261, "data_time": 0.30597, "loss_rpn_cls": 0.00189, "loss_rpn_bbox": 0.00846, "loss_cls": 0.03548, "acc": 98.72559, "loss_bbox": 0.05816, "loss_mask": 0.07377, "loss": 0.17776, "time": 0.81701}
{"mode": "val", "epoch": 18, "iter": 13, "lr": 0.00287, "bbox_mAP": 0.7671, "bbox_mAP_50": 0.8924, "bbox_mAP_75": 0.8715, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7286, "bbox_mAP_l": 0.8201, "bbox_mAP_copypaste": "0.7671 0.8924 0.8715 0.0000 0.7286 0.8201", "segm_mAP": 0.7984, "segm_mAP_50": 0.8639, "segm_mAP_75": 0.8639, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6581, "segm_mAP_l": 0.8719, "segm_mAP_copypaste": "0.7984 0.8639 0.8639 0.0000 0.6581 0.8719"}
{"mode": "train", "epoch": 19, "iter": 10, "lr": 0.00297, "memory": 7261, "data_time": 0.31057, "loss_rpn_cls": 0.00133, "loss_rpn_bbox": 0.0115, "loss_cls": 0.0337, "acc": 98.71094, "loss_bbox": 0.06014, "loss_mask": 0.06728, "loss": 0.17395, "time": 0.84913}
{"mode": "val", "epoch": 19, "iter": 13, "lr": 0.00303, "bbox_mAP": 0.7884, "bbox_mAP_50": 0.894, "bbox_mAP_75": 0.8731, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6896, "bbox_mAP_l": 0.8627, "bbox_mAP_copypaste": "0.7884 0.8940 0.8731 0.0000 0.6896 0.8627", "segm_mAP": 0.7994, "segm_mAP_50": 0.894, "segm_mAP_75": 0.8701, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6818, "segm_mAP_l": 0.8707, "segm_mAP_copypaste": "0.7994 0.8940 0.8701 0.0000 0.6818 0.8707"}
{"mode": "train", "epoch": 20, "iter": 10, "lr": 0.00313, "memory": 7261, "data_time": 0.30455, "loss_rpn_cls": 0.0013, "loss_rpn_bbox": 0.00878, "loss_cls": 0.03031, "acc": 98.83789, "loss_bbox": 0.05748, "loss_mask": 0.06573, "loss": 0.1636, "time": 0.82943}
{"mode": "val", "epoch": 20, "iter": 13, "lr": 0.00319, "bbox_mAP": 0.7843, "bbox_mAP_50": 0.8945, "bbox_mAP_75": 0.8728, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7252, "bbox_mAP_l": 0.844, "bbox_mAP_copypaste": "0.7843 0.8945 0.8728 0.0000 0.7252 0.8440", "segm_mAP": 0.8035, "segm_mAP_50": 0.8945, "segm_mAP_75": 0.8945, "segm_mAP_s": 0.0, "segm_mAP_m": 0.7236, "segm_mAP_l": 0.8721, "segm_mAP_copypaste": "0.8035 0.8945 0.8945 0.0000 0.7236 0.8721"}
{"mode": "train", "epoch": 21, "iter": 10, "lr": 0.00329, "memory": 7261, "data_time": 0.31322, "loss_rpn_cls": 0.00132, "loss_rpn_bbox": 0.00771, "loss_cls": 0.03266, "acc": 98.78418, "loss_bbox": 0.05344, "loss_mask": 0.06356, "loss": 0.15868, "time": 0.87071}
{"mode": "val", "epoch": 21, "iter": 13, "lr": 0.00335, "bbox_mAP": 0.7706, "bbox_mAP_50": 0.9021, "bbox_mAP_75": 0.8739, "bbox_mAP_s": 0.2525, "bbox_mAP_m": 0.6694, "bbox_mAP_l": 0.8369, "bbox_mAP_copypaste": "0.7706 0.9021 0.8739 0.2525 0.6694 0.8369", "segm_mAP": 0.814, "segm_mAP_50": 0.9021, "segm_mAP_75": 0.8841, "segm_mAP_s": 0.1936, "segm_mAP_m": 0.6631, "segm_mAP_l": 0.882, "segm_mAP_copypaste": "0.8140 0.9021 0.8841 0.1936 0.6631 0.8820"}
{"mode": "train", "epoch": 22, "iter": 10, "lr": 0.00345, "memory": 7261, "data_time": 0.33935, "loss_rpn_cls": 0.00097, "loss_rpn_bbox": 0.00617, "loss_cls": 0.02718, "acc": 99.0918, "loss_bbox": 0.04966, "loss_mask": 0.06058, "loss": 0.14456, "time": 0.8677}
{"mode": "val", "epoch": 22, "iter": 13, "lr": 0.00351, "bbox_mAP": 0.7679, "bbox_mAP_50": 0.89, "bbox_mAP_75": 0.8673, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7105, "bbox_mAP_l": 0.829, "bbox_mAP_copypaste": "0.7679 0.8900 0.8673 0.0000 0.7105 0.8290", "segm_mAP": 0.8012, "segm_mAP_50": 0.89, "segm_mAP_75": 0.862, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6945, "segm_mAP_l": 0.878, "segm_mAP_copypaste": "0.8012 0.8900 0.8620 0.0000 0.6945 0.8780"}
{"mode": "train", "epoch": 23, "iter": 10, "lr": 0.00361, "memory": 7261, "data_time": 0.33407, "loss_rpn_cls": 0.00084, "loss_rpn_bbox": 0.00764, "loss_cls": 0.02749, "acc": 98.98438, "loss_bbox": 0.05751, "loss_mask": 0.06987, "loss": 0.16336, "time": 0.86908}
{"mode": "val", "epoch": 23, "iter": 13, "lr": 0.00367, "bbox_mAP": 0.7819, "bbox_mAP_50": 0.9008, "bbox_mAP_75": 0.8714, "bbox_mAP_s": 0.2525, "bbox_mAP_m": 0.7032, "bbox_mAP_l": 0.8413, "bbox_mAP_copypaste": "0.7819 0.9008 0.8714 0.2525 0.7032 0.8413", "segm_mAP": 0.8038, "segm_mAP_50": 0.8842, "segm_mAP_75": 0.8842, "segm_mAP_s": 0.1767, "segm_mAP_m": 0.6805, "segm_mAP_l": 0.8629, "segm_mAP_copypaste": "0.8038 0.8842 0.8842 0.1767 0.6805 0.8629"}
{"mode": "train", "epoch": 24, "iter": 10, "lr": 0.00377, "memory": 7261, "data_time": 0.35454, "loss_rpn_cls": 0.00067, "loss_rpn_bbox": 0.00553, "loss_cls": 0.02605, "acc": 99.01367, "loss_bbox": 0.04687, "loss_mask": 0.07092, "loss": 0.15005, "time": 0.90509}
{"mode": "val", "epoch": 24, "iter": 13, "lr": 0.00383, "bbox_mAP": 0.7685, "bbox_mAP_50": 0.8961, "bbox_mAP_75": 0.874, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6738, "bbox_mAP_l": 0.8369, "bbox_mAP_copypaste": "0.7685 0.8961 0.8740 0.0000 0.6738 0.8369", "segm_mAP": 0.7965, "segm_mAP_50": 0.8961, "segm_mAP_75": 0.8708, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6515, "segm_mAP_l": 0.8716, "segm_mAP_copypaste": "0.7965 0.8961 0.8708 0.0000 0.6515 0.8716"}
{"mode": "train", "epoch": 25, "iter": 10, "lr": 0.00393, "memory": 7261, "data_time": 0.33372, "loss_rpn_cls": 0.00084, "loss_rpn_bbox": 0.00678, "loss_cls": 0.02778, "acc": 98.8623, "loss_bbox": 0.05302, "loss_mask": 0.06922, "loss": 0.15764, "time": 0.87623}
{"mode": "val", "epoch": 25, "iter": 13, "lr": 0.00399, "bbox_mAP": 0.7718, "bbox_mAP_50": 0.8888, "bbox_mAP_75": 0.8666, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6744, "bbox_mAP_l": 0.8393, "bbox_mAP_copypaste": "0.7718 0.8888 0.8666 0.0000 0.6744 0.8393", "segm_mAP": 0.7841, "segm_mAP_50": 0.8624, "segm_mAP_75": 0.8624, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6399, "segm_mAP_l": 0.8581, "segm_mAP_copypaste": "0.7841 0.8624 0.8624 0.0000 0.6399 0.8581"}
{"mode": "train", "epoch": 26, "iter": 10, "lr": 0.00409, "memory": 7261, "data_time": 0.30615, "loss_rpn_cls": 0.00065, "loss_rpn_bbox": 0.006, "loss_cls": 0.02438, "acc": 98.98926, "loss_bbox": 0.04127, "loss_mask": 0.05578, "loss": 0.12809, "time": 0.86036}
{"mode": "val", "epoch": 26, "iter": 13, "lr": 0.00415, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8939, "bbox_mAP_75": 0.8717, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8293, "bbox_mAP_copypaste": "0.7722 0.8939 0.8717 0.0000 0.7187 0.8293", "segm_mAP": 0.7905, "segm_mAP_50": 0.8939, "segm_mAP_75": 0.8651, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6404, "segm_mAP_l": 0.8686, "segm_mAP_copypaste": "0.7905 0.8939 0.8651 0.0000 0.6404 0.8686"}
{"mode": "train", "epoch": 27, "iter": 10, "lr": 0.00043, "memory": 7261, "data_time": 0.29487, "loss_rpn_cls": 0.0004, "loss_rpn_bbox": 0.00782, "loss_cls": 0.02595, "acc": 99.02832, "loss_bbox": 0.04048, "loss_mask": 0.0566, "loss": 0.13123, "time": 0.8287}
{"mode": "val", "epoch": 27, "iter": 13, "lr": 0.00043, "bbox_mAP": 0.7966, "bbox_mAP_50": 0.8952, "bbox_mAP_75": 0.873, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.724, "bbox_mAP_l": 0.861, "bbox_mAP_copypaste": "0.7966 0.8952 0.8730 0.0000 0.7240 0.8610", "segm_mAP": 0.7986, "segm_mAP_50": 0.8952, "segm_mAP_75": 0.8664, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6474, "segm_mAP_l": 0.8764, "segm_mAP_copypaste": "0.7986 0.8952 0.8664 0.0000 0.6474 0.8764"}
{"mode": "train", "epoch": 28, "iter": 10, "lr": 0.00044, "memory": 7261, "data_time": 0.29496, "loss_rpn_cls": 0.00124, "loss_rpn_bbox": 0.00659, "loss_cls": 0.02663, "acc": 99.05273, "loss_bbox": 0.04187, "loss_mask": 0.05782, "loss": 0.13414, "time": 0.81475}
{"mode": "val", "epoch": 28, "iter": 13, "lr": 0.00045, "bbox_mAP": 0.8013, "bbox_mAP_50": 0.894, "bbox_mAP_75": 0.8727, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7071, "bbox_mAP_l": 0.8712, "bbox_mAP_copypaste": "0.8013 0.8940 0.8727 0.0000 0.7071 0.8712", "segm_mAP": 0.8003, "segm_mAP_50": 0.894, "segm_mAP_75": 0.8653, "segm_mAP_s": 0.0, "segm_mAP_m": 0.64, "segm_mAP_l": 0.8789, "segm_mAP_copypaste": "0.8003 0.8940 0.8653 0.0000 0.6400 0.8789"}
{"mode": "train", "epoch": 29, "iter": 10, "lr": 0.00046, "memory": 7261, "data_time": 0.36235, "loss_rpn_cls": 0.00052, "loss_rpn_bbox": 0.00402, "loss_cls": 0.02255, "acc": 99.15039, "loss_bbox": 0.03536, "loss_mask": 0.05995, "loss": 0.12238, "time": 0.90838}
{"mode": "val", "epoch": 29, "iter": 13, "lr": 0.00046, "bbox_mAP": 0.8024, "bbox_mAP_50": 0.8925, "bbox_mAP_75": 0.8711, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7072, "bbox_mAP_l": 0.8712, "bbox_mAP_copypaste": "0.8024 0.8925 0.8711 0.0000 0.7072 0.8712", "segm_mAP": 0.7988, "segm_mAP_50": 0.8925, "segm_mAP_75": 0.8636, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6476, "segm_mAP_l": 0.8772, "segm_mAP_copypaste": "0.7988 0.8925 0.8636 0.0000 0.6476 0.8772"}
{"mode": "train", "epoch": 30, "iter": 10, "lr": 0.00047, "memory": 7261, "data_time": 0.34315, "loss_rpn_cls": 0.00102, "loss_rpn_bbox": 0.00439, "loss_cls": 0.0222, "acc": 99.21387, "loss_bbox": 0.03557, "loss_mask": 0.0571, "loss": 0.12028, "time": 0.88483}
{"mode": "val", "epoch": 30, "iter": 13, "lr": 0.00048, "bbox_mAP": 0.8038, "bbox_mAP_50": 0.8925, "bbox_mAP_75": 0.8711, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7072, "bbox_mAP_l": 0.8727, "bbox_mAP_copypaste": "0.8038 0.8925 0.8711 0.0000 0.7072 0.8727", "segm_mAP": 0.7993, "segm_mAP_50": 0.8925, "segm_mAP_75": 0.8635, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6476, "segm_mAP_l": 0.8772, "segm_mAP_copypaste": "0.7993 0.8925 0.8635 0.0000 0.6476 0.8772"}
{"mode": "train", "epoch": 31, "iter": 10, "lr": 0.00049, "memory": 7261, "data_time": 0.35815, "loss_rpn_cls": 0.00118, "loss_rpn_bbox": 0.00408, "loss_cls": 0.0249, "acc": 99.05273, "loss_bbox": 0.03709, "loss_mask": 0.05738, "loss": 0.12464, "time": 0.91138}
{"mode": "val", "epoch": 31, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8076, "bbox_mAP_50": 0.8937, "bbox_mAP_75": 0.8724, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.705, "bbox_mAP_l": 0.8798, "bbox_mAP_copypaste": "0.8076 0.8937 0.8724 0.0000 0.7050 0.8798", "segm_mAP": 0.7987, "segm_mAP_50": 0.8937, "segm_mAP_75": 0.8657, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6549, "segm_mAP_l": 0.8758, "segm_mAP_copypaste": "0.7987 0.8937 0.8657 0.0000 0.6549 0.8758"}
{"mode": "train", "epoch": 32, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.32836, "loss_rpn_cls": 0.00066, "loss_rpn_bbox": 0.00507, "loss_cls": 0.02422, "acc": 99.14551, "loss_bbox": 0.03948, "loss_mask": 0.06233, "loss": 0.13176, "time": 0.87437}
{"mode": "val", "epoch": 32, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8038, "bbox_mAP_50": 0.8927, "bbox_mAP_75": 0.8714, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7072, "bbox_mAP_l": 0.8729, "bbox_mAP_copypaste": "0.8038 0.8927 0.8714 0.0000 0.7072 0.8729", "segm_mAP": 0.7967, "segm_mAP_50": 0.8927, "segm_mAP_75": 0.8637, "segm_mAP_s": 0.0, "segm_mAP_m": 0.64, "segm_mAP_l": 0.8744, "segm_mAP_copypaste": "0.7967 0.8927 0.8637 0.0000 0.6400 0.8744"}
{"mode": "train", "epoch": 33, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.33818, "loss_rpn_cls": 0.00035, "loss_rpn_bbox": 0.00446, "loss_cls": 0.02335, "acc": 99.14062, "loss_bbox": 0.03607, "loss_mask": 0.06077, "loss": 0.125, "time": 0.87661}
{"mode": "val", "epoch": 33, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8075, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8723, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7031, "bbox_mAP_l": 0.8802, "bbox_mAP_copypaste": "0.8075 0.8936 0.8723 0.0000 0.7031 0.8802", "segm_mAP": 0.7992, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8652, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6411, "segm_mAP_l": 0.8777, "segm_mAP_copypaste": "0.7992 0.8936 0.8652 0.0000 0.6411 0.8777"}
{"mode": "train", "epoch": 34, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.35221, "loss_rpn_cls": 0.00063, "loss_rpn_bbox": 0.00407, "loss_cls": 0.02323, "acc": 99.17969, "loss_bbox": 0.0316, "loss_mask": 0.06076, "loss": 0.12028, "time": 0.8862}
{"mode": "val", "epoch": 34, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8054, "bbox_mAP_50": 0.8939, "bbox_mAP_75": 0.8726, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7014, "bbox_mAP_l": 0.877, "bbox_mAP_copypaste": "0.8054 0.8939 0.8726 0.0000 0.7014 0.8770", "segm_mAP": 0.8001, "segm_mAP_50": 0.8939, "segm_mAP_75": 0.8656, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6395, "segm_mAP_l": 0.8786, "segm_mAP_copypaste": "0.8001 0.8939 0.8656 0.0000 0.6395 0.8786"}
{"mode": "train", "epoch": 35, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.34668, "loss_rpn_cls": 0.00059, "loss_rpn_bbox": 0.00459, "loss_cls": 0.02663, "acc": 99.00391, "loss_bbox": 0.03703, "loss_mask": 0.06317, "loss": 0.132, "time": 0.88528}
{"mode": "val", "epoch": 35, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8112, "bbox_mAP_50": 0.8941, "bbox_mAP_75": 0.8728, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.717, "bbox_mAP_l": 0.8805, "bbox_mAP_copypaste": "0.8112 0.8941 0.8728 0.0000 0.7170 0.8805", "segm_mAP": 0.8031, "segm_mAP_50": 0.8941, "segm_mAP_75": 0.866, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6421, "segm_mAP_l": 0.8821, "segm_mAP_copypaste": "0.8031 0.8941 0.8660 0.0000 0.6421 0.8821"}
{"mode": "train", "epoch": 36, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.34759, "loss_rpn_cls": 0.0004, "loss_rpn_bbox": 0.00354, "loss_cls": 0.02153, "acc": 99.25781, "loss_bbox": 0.03401, "loss_mask": 0.05724, "loss": 0.11672, "time": 0.87927}
{"mode": "val", "epoch": 36, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8098, "bbox_mAP_50": 0.8942, "bbox_mAP_75": 0.8732, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.721, "bbox_mAP_l": 0.8785, "bbox_mAP_copypaste": "0.8098 0.8942 0.8732 0.0000 0.7210 0.8785", "segm_mAP": 0.8004, "segm_mAP_50": 0.8942, "segm_mAP_75": 0.8662, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8791, "segm_mAP_copypaste": "0.8004 0.8942 0.8662 0.0000 0.6398 0.8791"}
{"mode": "train", "epoch": 37, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.36196, "loss_rpn_cls": 0.0007, "loss_rpn_bbox": 0.00461, "loss_cls": 0.02498, "acc": 99.10645, "loss_bbox": 0.03859, "loss_mask": 0.06278, "loss": 0.13167, "time": 0.90144}
{"mode": "val", "epoch": 37, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8118, "bbox_mAP_50": 0.8946, "bbox_mAP_75": 0.8737, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8814, "bbox_mAP_copypaste": "0.8118 0.8946 0.8737 0.0000 0.7188 0.8814", "segm_mAP": 0.8012, "segm_mAP_50": 0.8946, "segm_mAP_75": 0.8665, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8797, "segm_mAP_copypaste": "0.8012 0.8946 0.8665 0.0000 0.6398 0.8797"}
{"mode": "train", "epoch": 38, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.3454, "loss_rpn_cls": 0.00042, "loss_rpn_bbox": 0.00352, "loss_cls": 0.02281, "acc": 99.11133, "loss_bbox": 0.03165, "loss_mask": 0.05354, "loss": 0.11195, "time": 0.87988}
{"mode": "val", "epoch": 38, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.8118, "bbox_mAP_50": 0.8946, "bbox_mAP_75": 0.8737, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.721, "bbox_mAP_l": 0.8801, "bbox_mAP_copypaste": "0.8118 0.8946 0.8737 0.0000 0.7210 0.8801", "segm_mAP": 0.8002, "segm_mAP_50": 0.8946, "segm_mAP_75": 0.8663, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6414, "segm_mAP_l": 0.8785, "segm_mAP_copypaste": "0.8002 0.8946 0.8663 0.0000 0.6414 0.8785"}
{"mode": "train", "epoch": 39, "iter": 10, "lr": 0.0005, "memory": 7261, "data_time": 0.34348, "loss_rpn_cls": 0.00032, "loss_rpn_bbox": 0.00352, "loss_cls": 0.02125, "acc": 99.2627, "loss_bbox": 0.03193, "loss_mask": 0.05956, "loss": 0.11659, "time": 0.87518}
{"mode": "val", "epoch": 39, "iter": 13, "lr": 0.0005, "bbox_mAP": 0.7996, "bbox_mAP_50": 0.8931, "bbox_mAP_75": 0.8722, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7074, "bbox_mAP_l": 0.8681, "bbox_mAP_copypaste": "0.7996 0.8931 0.8722 0.0000 0.7074 0.8681", "segm_mAP": 0.7989, "segm_mAP_50": 0.8931, "segm_mAP_75": 0.8646, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8778, "segm_mAP_copypaste": "0.7989 0.8931 0.8646 0.0000 0.6398 0.8778"}
{"mode": "train", "epoch": 40, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.34837, "loss_rpn_cls": 0.00056, "loss_rpn_bbox": 0.00343, "loss_cls": 0.01906, "acc": 99.30664, "loss_bbox": 0.02871, "loss_mask": 0.05301, "loss": 0.10478, "time": 0.89419}
{"mode": "val", "epoch": 40, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8041, "bbox_mAP_50": 0.8931, "bbox_mAP_75": 0.8722, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7074, "bbox_mAP_l": 0.8741, "bbox_mAP_copypaste": "0.8041 0.8931 0.8722 0.0000 0.7074 0.8741", "segm_mAP": 0.7989, "segm_mAP_50": 0.8931, "segm_mAP_75": 0.8646, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8778, "segm_mAP_copypaste": "0.7989 0.8931 0.8646 0.0000 0.6398 0.8778"}
{"mode": "train", "epoch": 41, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.33763, "loss_rpn_cls": 0.00062, "loss_rpn_bbox": 0.00329, "loss_cls": 0.01977, "acc": 99.24805, "loss_bbox": 0.03162, "loss_mask": 0.05529, "loss": 0.11059, "time": 0.87723}
{"mode": "val", "epoch": 41, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8075, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8727, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8763, "bbox_mAP_copypaste": "0.8075 0.8936 0.8727 0.0000 0.7188 0.8763", "segm_mAP": 0.7996, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8652, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8785, "segm_mAP_copypaste": "0.7996 0.8936 0.8652 0.0000 0.6398 0.8785"}
{"mode": "train", "epoch": 42, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.38369, "loss_rpn_cls": 0.00041, "loss_rpn_bbox": 0.00412, "loss_cls": 0.02243, "acc": 99.18945, "loss_bbox": 0.0336, "loss_mask": 0.05648, "loss": 0.11704, "time": 0.94491}
{"mode": "val", "epoch": 42, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8074, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8727, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8763, "bbox_mAP_copypaste": "0.8074 0.8936 0.8727 0.0000 0.7188 0.8763", "segm_mAP": 0.7996, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8652, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8785, "segm_mAP_copypaste": "0.7996 0.8936 0.8652 0.0000 0.6398 0.8785"}
{"mode": "train", "epoch": 43, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.33874, "loss_rpn_cls": 0.00041, "loss_rpn_bbox": 0.00303, "loss_cls": 0.02105, "acc": 99.20898, "loss_bbox": 0.0322, "loss_mask": 0.06016, "loss": 0.11686, "time": 0.86593}
{"mode": "val", "epoch": 43, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8057, "bbox_mAP_50": 0.8931, "bbox_mAP_75": 0.8722, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8741, "bbox_mAP_copypaste": "0.8057 0.8931 0.8722 0.0000 0.7188 0.8741", "segm_mAP": 0.7986, "segm_mAP_50": 0.8931, "segm_mAP_75": 0.8646, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6398, "segm_mAP_l": 0.8774, "segm_mAP_copypaste": "0.7986 0.8931 0.8646 0.0000 0.6398 0.8774"}
{"mode": "train", "epoch": 44, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.369, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00402, "loss_cls": 0.02193, "acc": 99.15527, "loss_bbox": 0.03451, "loss_mask": 0.06134, "loss": 0.12227, "time": 0.91141}
{"mode": "val", "epoch": 44, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8061, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8727, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8745, "bbox_mAP_copypaste": "0.8061 0.8936 0.8727 0.0000 0.7188 0.8745", "segm_mAP": 0.7992, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8651, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6414, "segm_mAP_l": 0.8774, "segm_mAP_copypaste": "0.7992 0.8936 0.8651 0.0000 0.6414 0.8774"}
{"mode": "train", "epoch": 45, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.30605, "loss_rpn_cls": 0.00058, "loss_rpn_bbox": 0.00355, "loss_cls": 0.02112, "acc": 99.14062, "loss_bbox": 0.03133, "loss_mask": 0.05652, "loss": 0.11309, "time": 0.84538}
{"mode": "val", "epoch": 45, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8079, "bbox_mAP_50": 0.8941, "bbox_mAP_75": 0.8732, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8768, "bbox_mAP_copypaste": "0.8079 0.8941 0.8732 0.0000 0.7188 0.8768", "segm_mAP": 0.8004, "segm_mAP_50": 0.8941, "segm_mAP_75": 0.8657, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6414, "segm_mAP_l": 0.8788, "segm_mAP_copypaste": "0.8004 0.8941 0.8657 0.0000 0.6414 0.8788"}
{"mode": "train", "epoch": 46, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.30234, "loss_rpn_cls": 0.00077, "loss_rpn_bbox": 0.00382, "loss_cls": 0.02072, "acc": 99.21875, "loss_bbox": 0.03117, "loss_mask": 0.05973, "loss": 0.11621, "time": 0.83977}
{"mode": "val", "epoch": 46, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8046, "bbox_mAP_50": 0.8931, "bbox_mAP_75": 0.8722, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8724, "bbox_mAP_copypaste": "0.8046 0.8931 0.8722 0.0000 0.7188 0.8724", "segm_mAP": 0.7984, "segm_mAP_50": 0.8931, "segm_mAP_75": 0.8644, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6414, "segm_mAP_l": 0.8762, "segm_mAP_copypaste": "0.7984 0.8931 0.8644 0.0000 0.6414 0.8762"}
{"mode": "train", "epoch": 47, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.32621, "loss_rpn_cls": 0.00055, "loss_rpn_bbox": 0.00419, "loss_cls": 0.02362, "acc": 99.07715, "loss_bbox": 0.03519, "loss_mask": 0.05886, "loss": 0.12241, "time": 0.8493}
{"mode": "val", "epoch": 47, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8047, "bbox_mAP_50": 0.8931, "bbox_mAP_75": 0.8722, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8726, "bbox_mAP_copypaste": "0.8047 0.8931 0.8722 0.0000 0.7188 0.8726", "segm_mAP": 0.7984, "segm_mAP_50": 0.8931, "segm_mAP_75": 0.8644, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6414, "segm_mAP_l": 0.8763, "segm_mAP_copypaste": "0.7984 0.8931 0.8644 0.0000 0.6414 0.8763"}
{"mode": "train", "epoch": 48, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.33485, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00439, "loss_cls": 0.02439, "acc": 99.06738, "loss_bbox": 0.03617, "loss_mask": 0.063, "loss": 0.12841, "time": 0.86732}
{"mode": "val", "epoch": 48, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8072, "bbox_mAP_50": 0.8941, "bbox_mAP_75": 0.8732, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8754, "bbox_mAP_copypaste": "0.8072 0.8941 0.8732 0.0000 0.7188 0.8754", "segm_mAP": 0.8033, "segm_mAP_50": 0.8941, "segm_mAP_75": 0.8657, "segm_mAP_s": 0.0, "segm_mAP_m": 0.649, "segm_mAP_l": 0.8817, "segm_mAP_copypaste": "0.8033 0.8941 0.8657 0.0000 0.6490 0.8817"}
{"mode": "train", "epoch": 49, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.34272, "loss_rpn_cls": 0.00092, "loss_rpn_bbox": 0.00409, "loss_cls": 0.02421, "acc": 99.00879, "loss_bbox": 0.03546, "loss_mask": 0.06024, "loss": 0.12492, "time": 0.87074}
{"mode": "val", "epoch": 49, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8065, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8727, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7188, "bbox_mAP_l": 0.8751, "bbox_mAP_copypaste": "0.8065 0.8936 0.8727 0.0000 0.7188 0.8751", "segm_mAP": 0.8023, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8651, "segm_mAP_s": 0.0, "segm_mAP_m": 0.649, "segm_mAP_l": 0.8806, "segm_mAP_copypaste": "0.8023 0.8936 0.8651 0.0000 0.6490 0.8806"}
{"mode": "train", "epoch": 50, "iter": 10, "lr": 5e-05, "memory": 7261, "data_time": 0.32935, "loss_rpn_cls": 0.00051, "loss_rpn_bbox": 0.00374, "loss_cls": 0.02243, "acc": 99.12598, "loss_bbox": 0.03337, "loss_mask": 0.05759, "loss": 0.11764, "time": 0.86265}
{"mode": "val", "epoch": 50, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.8053, "bbox_mAP_50": 0.8941, "bbox_mAP_75": 0.8732, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7074, "bbox_mAP_l": 0.8754, "bbox_mAP_copypaste": "0.8053 0.8941 0.8732 0.0000 0.7074 0.8754", "segm_mAP": 0.8033, "segm_mAP_50": 0.8941, "segm_mAP_75": 0.8657, "segm_mAP_s": 0.0, "segm_mAP_m": 0.649, "segm_mAP_l": 0.8817, "segm_mAP_copypaste": "0.8033 0.8941 0.8657 0.0000 0.6490 0.8817"}
